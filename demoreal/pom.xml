<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.1.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>com.example</groupId>
    <artifactId>demoreal</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>demoreal</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <java.version>1.8</java.version>
    </properties>

    <!-- 设定除中央仓库(repo1.maven.org/maven2/)外的其他仓库,按设定顺序进行查找. -->
    <repositories>
        <!-- 如有Nexus私服, 取消注释并指向正确的服务器地址. -->
        <repository>
            <id>jsptz-nexus</id>
            <name>Team Nexus Repository</name>
            <url>http://106.14.150.7:8081/nexus/content/groups/public/</url>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>
    <!-- 设定使用Release插件发布的仓库服务器 如有Nexus私服, 取消注释并指向正确的服务器地址. -->
    <distributionManagement>
        <repository>
            <id>jsptz-nexus</id>
            <name>Team Nexus Release Repository</name>
            <url>http://106.14.150.7:8081/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>jsptz-nexus-snapshot</id>
            <name>Team Nexus Snapshot Repository</name>
            <url>http://106.14.150.7:8081/nexus/content/repositories/snapshots/</url>
            <uniqueVersion>false</uniqueVersion>
        </snapshotRepository>
    </distributionManagement>

    <dependencies>
        <!-- sinosoft -->
        <dependency>
            <groupId>ins.framework</groupId>
            <artifactId>ins-framework-web</artifactId>
        </dependency>
        <dependency>
            <groupId>ins.framework</groupId>
            <artifactId>ins-framework-utils</artifactId>
        </dependency>
        <dependency>
            <groupId>ins.framework</groupId>
            <artifactId>ins-framework-mybatis</artifactId>
        </dependency>
        <dependency>
            <groupId>ins.framework</groupId>
            <artifactId>ins-framework-mybatis-generator</artifactId>
        </dependency>

        <!-- spring boot begin-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <!-- 服务注册所需环境 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
        <!-- spring boot end-->

        <!-- spring cloud begin -->
        <!--hystrix-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
        </dependency>
        <!-- feign调用 begin -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-feign</artifactId>
        </dependency>
        <!-- feign调用 end -->
        <!-- 	<dependency>
                 <groupId>org.springframework.cloud</groupId>
                 <artifactId>spring-cloud-starter-bus-amqp</artifactId>
             </dependency> -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <!-- spring cloud end -->

        <!-- lombok工具 -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <!--指定范围： 编译和测试的时候使用 -->
            <scope>provided</scope>
        </dependency>

        <!-- 阿里云 -->
        <dependency>
            <groupId>com.jiaanpei.aliyun</groupId>
            <artifactId>aliyun-java-sdk-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.tomcat</groupId>
            <artifactId>tomcat-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>

        <!-- json bengin -->
        <dependency>
            <groupId>net.sf.json-lib</groupId>
            <artifactId>json-lib</artifactId>
            <version>2.1</version>
            <classifier>jdk15</classifier>
        </dependency>
        <!-- json end -->

        <!-- 阿里云 -->
        <dependency>
            <groupId>com.jiaanpei.aliyun</groupId>
            <artifactId>aliyun-java-sdk-core</artifactId>
        </dependency>
        <!-- 文件上传-->
        <dependency>
            <groupId>com.jiaanpei.aliyun</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jdom</groupId>
            <artifactId>jdom</artifactId>
        </dependency>
        <!-- 阿里云 -->
        <!-- javamelody监控Start -->
        <!-- <dependency>
            <groupId>net.bull.javamelody</groupId>
            <artifactId>javamelody-core</artifactId>
            <version>1.62.0</version>
        </dependency> -->
        <!-- itext, option to add PDF export -->

        <!-- jwt -->
        <!-- <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>0.7.0</version>
        </dependency> -->
        <!-- jwt -->
        <!-- 服务注册所需环境 -->
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
